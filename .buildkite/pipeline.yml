steps:
  - key: create_custom_base_image
    label: ":docker: Create custom base image"
    agents:
      queue: new-normal # a dedicated queue using the default base image
    command: |
      export REGISTRY="$(nsc workspace describe -o json -k registry_url)"
      export SERVICE="base" # name of the image
      export DOCKER_REPOSITORY="$${REGISTRY}/$${SERVICE}:latest"

      docker buildx build \
        --no-cache \
        --file .buildkite/Dockerfile.build \
        --build-arg BUILDKITE_BUILD_NUMBER="$$BUILDKITE_BUILD_NUMBER" \
        --platform linux/amd64,linux/arm64 \
        --tag "$${DOCKER_REPOSITORY}" \
        --progress plain \
        --push .

      echo "=== Custom Base Image Created ==="
      echo "Build #$BUILDKITE_BUILD_NUMBER"
      echo "Repository: $${DOCKER_REPOSITORY}"
      buildkite-agent annotate --style "success" ":rocket: Image pushed to \`$${DOCKER_REPOSITORY}\`"

  - key: update_base_image
    label: ":gear: Update base image URL"
    depends_on: create_custom_base_image
    agents:
      queue: new-normal # use the same queue as the first step
    command: |
      export REGISTRY="$(nsc workspace describe -o json -k registry_url)"
      export SERVICE="base" # name of the image
      export DOCKER_REPOSITORY="$${REGISTRY}/$${SERVICE}:latest"

      echo "=== Updating Base Image URL ==="
      echo "Build #$BUILDKITE_BUILD_NUMBER"
      echo "Docker Repository: $${DOCKER_REPOSITORY}"

      # Check if Node.js is available
      if ! command -v node &> /dev/null; then
          echo "‚ùå Node.js not found. Installing..."
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs
      fi

      # Verify the update_base_image.js file exists
      if [ ! -f "update_base_image.js" ]; then
          echo "‚ùå update_base_image.js not found in current directory"
          ls -la
          exit 1
      fi

      # Check required environment variables
      if [ -z "$${BUILDKITE_ORG_SLUG:-}" ] || [ -z "$${BUILDKITE_CLUSTER_ID:-}" ] || [ -z "$${BUILDKITE_QUEUE_ID:-}" ]; then
          echo "‚ùå Missing required environment variables:"
          echo "   BUILDKITE_ORG_SLUG: $${BUILDKITE_ORG_SLUG:-not set}"
          echo "   BUILDKITE_CLUSTER_ID: $${BUILDKITE_CLUSTER_ID:-not set}"
          echo "   BUILDKITE_QUEUE_ID: $${BUILDKITE_QUEUE_ID:-not set}"
          echo ""
          echo "‚ÑπÔ∏è  Please set these environment variables in your Buildkite pipeline settings"
          echo "   or temporarily skipping this step will allow the pipeline to continue."

          # Option to skip or fail
          if [ "$${SKIP_BASE_IMAGE_UPDATE:-false}" = "true" ]; then
              echo "‚è≠Ô∏è  Skipping base image update (SKIP_BASE_IMAGE_UPDATE=true)"
              exit 0
          else
              echo "üí° Set SKIP_BASE_IMAGE_UPDATE=true to skip this step temporarily"
              exit 1
          fi
      fi

      # Run the update_base_image.js script
      echo "üîÑ Running base image update script..."
      node update_base_image.js "$${BUILDKITE_ORG_SLUG}" "$${BUILDKITE_CLUSTER_ID}" "$${BUILDKITE_QUEUE_ID}" "$${DOCKER_REPOSITORY}"

      buildkite-agent annotate --style "info" ":link: Base image URL updated to \`$${DOCKER_REPOSITORY}\`"

  - key: use_custom_base_image
    label: ":package: Use custom base image"
    depends_on: update_base_image
    agents:
      queue: default-hosted-custom # a dedicated queue using the custom base image with latest tag
    command: |
      echo "=== Using Custom Base Image ==="
      echo "Build #$BUILDKITE_BUILD_NUMBER"
      echo "Image build number marker:"
      cat /build-number-marker
